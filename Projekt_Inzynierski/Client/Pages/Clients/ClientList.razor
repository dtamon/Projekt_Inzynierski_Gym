@page "/clientList"
@using Projekt_Inzynierski.Core.DTOs;
@inject NavigationManager NavigationManager
@inject HttpClient _httpClient

<div class="d-flex justify-content-between">
    <h3>Lista Klientów</h3>
    <NavLink class="nav-link" href="clientAdd">
        <input type="button" class="btn btn-success" value="+ Dodaj" />
    </NavLink>
</div>

@if (clients == null)
{
    <p><em>Ładowanie...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Imię</th>
                <th>Nazwisko</th>
                <th>Numer tel.</th>
                <th>Email</th>
                <th>Pesel</th>
                <th>Umowa</th>
                <th>Okres umowy</th>
                <th>Operacja</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var client in clients)
            {
                <tr>
                    <td>@client.FirstName</td>
                    <td>@client.LastName</td>
                    <td>@client.PhoneNr</td>
                    <td>@client.Email</td>
                    <td>@client.Pesel</td>
                    <td>@client.ContractMonths miesięcy, @client.ContractMonthlyCost zł miesięcznie</td>
                    <td>@client.ContractStart.ToShortDateString() - @client.ContractEnd.ToShortDateString()</td>
                    <td class="hstack">
                        <a class="nav-link" href="clientForm/details/@client.Id">
                            <span class="oi oi-magnifying-glass" aria-client="true"></span>
                        </a>
                        <a class="nav-link" href="clientForm/edit/@client.Id">
                            <span class="oi oi-pencil" aria-hidden="true"></span>
                        </a>
                        <a class="nav-link" href="" @onclick="@(() => {DeleteClient(client.Id); })">
                            <span class="oi oi-trash" aria-hidden="true"></span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    ICollection<ClientDto> clients = new List<ClientDto>();

    protected override async Task OnInitializedAsync()
    {
        clients = await _httpClient.GetFromJsonAsync<ICollection<ClientDto>>("api/client");
    }

    protected async void DeleteClient(int id)
    {
        await _httpClient.DeleteAsync($"api/client/{id}");
        NavigationManager.NavigateTo("/clientList");
    }
}