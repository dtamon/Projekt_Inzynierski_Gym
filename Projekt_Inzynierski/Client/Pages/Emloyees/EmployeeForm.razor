@page "/employeeAdd"
@page "/employeeForm/{FormMode}/{CurrentID}"
@using Projekt_Inzynierski.Core.DTOs;
@inject NavigationManager NavigationManager
@inject HttpClient _httpClient

<h3>Dane Pracownika</h3>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@employeeDto" OnValidSubmit=@OnValidSubmit class="vstack gap-3">
            <FluentValidationValidator />
            <div class="form-group" hidden>
                <input for="Id" class="form-control" @bind="@employeeDto.Id" />
            </div>
            <div class="form-group">
                <div class="input-group">
                    <label for="Email" class="input-group-text col-md-3">Email:</label>
                    <InputText @bind-Value="@employeeDto.Email" class="form-control" disabled="@isDisabled"></InputText>
                </div>
                <ValidationMessage For="@(() => employeeDto.Email)" />
            </div>
            <div class="form-group">
                <div class="input-group">
                    <label for="Password" class="input-group-text col-md-3">Hasło:</label>
                    <InputText @bind-Value="@employeeDto.Password" class="form-control" type="password" disabled="@isDisabled"></InputText>
                </div>
                <ValidationMessage For="@(() => employeeDto.Password)" />
            </div>
            <div class="form-group">
                <div class="input-group">
                    <label for="ConfirmPassword" class="input-group-text col-md-3">Powtórz hasło:</label>
                    <InputText @bind-Value="@employeeDto.ConfirmPassword" class="form-control" type="password" disabled="@isDisabled"></InputText>
                </div>
                <ValidationMessage For="@(() => employeeDto.ConfirmPassword)" />
            </div>
            <div class="form-group">
                <div class="input-group">
                    <label for="FirstName" class="input-group-text col-md-3">Imię:</label>
                    <InputText @bind-Value="@employeeDto.FirstName" class="form-control" disabled="@isDisabled"></InputText>
                </div>
                <ValidationMessage For="@(() => employeeDto.FirstName)" />
            </div>
            <div class="form-group">
                <div class="input-group">
                    <label for="LastName" class="input-group-text col-md-3">Nazwisko:</label>
                    <InputText @bind-Value="@employeeDto.LastName" class="form-control" disabled="@isDisabled"></InputText>
                </div>
                <ValidationMessage For="@(() => employeeDto.LastName)" />
            </div>
            <div class="form-group">
                <div class="input-group">
                    <label for="PhoneNr" class="input-group-text col-md-3">Numer tel.:</label>
                    <InputText @bind-Value="@employeeDto.PhoneNr" class="form-control" disabled="@isDisabled"></InputText>
                </div>
                <ValidationMessage For="@(() => employeeDto.PhoneNr)" />
            </div>
            <div class="form-group">
                <div class="input-group">
                    <label for="Pesel" class="input-group-text col-md-3">Pesel:</label>
                    <InputText @bind-Value="@employeeDto.Pesel" class="form-control" disabled="@isDisabled"></InputText>
                </div>
                <ValidationMessage For="@(() => employeeDto.Pesel)" />
            </div>
            <div class="form-group">
                <div class="input-group">
                    <label for="Sal" class="input-group-text col-md-3">Wynagrodzenie:</label>
                    <InputNumber @bind-Value="@employeeDto.Salary" class="form-control" disabled="@isDisabled"></InputNumber>
                </div>
                <ValidationMessage For="@(() => employeeDto.Salary)" />
            </div>
            <br />
            <div class="form-group ms-auto">
                <input type="submit" class="btn btn-primary" value=@(FormMode != "edit" ? "Zapisz" : "Aktualizuj") />
                <input type="button" class="btn btn-primary" @onclick=@Cancel value="Anuluj" />
                @if (FormMode == "edit")
                {
                    <input type="button" class="btn btn-danger" @onclick=@EndEmployment value="Koniec zatrudnienia" />
                }

            </div>
        </EditForm>
    </div>
</div>
@code {
    [Parameter]
    public string CurrentID { get; set; }
    [Parameter]
    public string FormMode { get; set; }

    EmployeeDto employeeDto = new EmployeeDto();
    bool isDisabled;

    protected override async Task OnInitializedAsync()
    {
        if (FormMode == "details")
        {
            isDisabled = true;
        }
        if (FormMode == "edit" || FormMode == "details")
        {
            var fetchedEmployee = await _httpClient.GetFromJsonAsync<EmployeeDto>($"api/employee/{CurrentID}");
            if (fetchedEmployee != null)
            {
                employeeDto = fetchedEmployee;
            }
        }

    }

    protected void OnValidSubmit()
    {
        if (FormMode != "edit")
        {
            CreateEmployee();
        }
        else
        {
            UpdateEmployee();
        }
    }

    protected async void CreateEmployee()
    {
        await _httpClient.PostAsJsonAsync("api/employee", employeeDto);
        NavigationManager.NavigateTo("employeeList");
    }

    protected async void UpdateEmployee()
    {
        await _httpClient.PutAsJsonAsync($"api/employee/{CurrentID}", employeeDto);
        NavigationManager.NavigateTo("employeeList");
    }

    protected void EndEmployment()
    {
        employeeDto.EmployedTo = DateTime.Today.AddMonths(1);
        UpdateEmployee();
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("employeeList");
    }
}