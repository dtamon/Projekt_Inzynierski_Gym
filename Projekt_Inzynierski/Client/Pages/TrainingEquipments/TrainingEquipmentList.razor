@page "/equipmentList"
@using Projekt_Inzynierski.Core.DTOs;
@inject NavigationManager NavigationManager
@inject HttpClient _httpClient

<div class="d-flex justify-content-between">
    <h3>Lista Urządzeń</h3>
    <NavLink class="nav-link" href="equipmentAdd">
        <input type="button" class="btn btn-success" value="+ Dodaj" />
    </NavLink>
</div>

@if (equipments == null)
{
    <p><em>Ładowanie...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Numer seryjny</th>
                <th>Stan techniczny</th>
                <th>Operacje</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var equipment in equipments)
            {
                <tr>
                    <td>@equipment.SerialNr</td>
                    @if (@equipment.TechnicalState)
                    {
                        <td>Sprawny</td>
                    }
                    else
                    {
                        <td>Niesprawny</td>
                    }

                    <td class="hstack">
                        <a class="nav-link" href="equipmentForm/details/@equipment.Id">
                            <span class="oi oi-magnifying-glass" aria-hidden="true"></span>
                        </a>
                        <a class="nav-link" href="equipmentForm/edit/@equipment.Id">
                            <span class="oi oi-pencil" aria-hidden="true"></span>
                        </a>
                        <a class="nav-link" href="" @onclick="@(() => {DeleteContract(equipment.Id); })">
                            <span class="oi oi-trash" aria-hidden="true"></span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    ICollection<TrainingEquipmentDto> equipments = new List<TrainingEquipmentDto>();

    protected override async Task OnInitializedAsync()
    {
        equipments = await _httpClient.GetFromJsonAsync<ICollection<TrainingEquipmentDto>>("api/trainingEquipment");
    }

    protected async void DeleteContract(int id)
    {
        await _httpClient.DeleteAsync($"api/trainingEquipment{id}");
        NavigationManager.NavigateTo("equipmentList");
    }
}
