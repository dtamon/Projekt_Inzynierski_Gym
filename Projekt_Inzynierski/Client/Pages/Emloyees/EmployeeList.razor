@page "/employeeList"
@using Projekt_Inzynierski.Core.DTOs;
@inject NavigationManager NavigationManager
@inject HttpClient _httpClient

<div class="d-flex justify-content-between">
    <h3>Lista Pracowników</h3>
    <div class="hstack gap-1">
        <div class="input-group">
            <input type="text" class="form-control" @bind="@searchPhrase" />
            <input type="button" class="btn btn-primary" @onclick=@Search value="Szukaj" />
        </div>
        <NavLink class="nav-link" href="employeeAdd">
            <input type="button" class="btn btn-success" value="+ Dodaj" />
        </NavLink>
    </div>
</div>

@if (employees == null)
{
    <p><em>Ładowanie...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Imię</th>
                <th>Nazwisko</th>
                <th>Numer tel.</th>
                <th>Email</th>
                <th>Pesel</th>
                <th>Wynagrodzenie</th>
                <th>Koniec umowy</th>
                <th>Operacja</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
                <tr>
                    <td>@employee.FirstName</td>
                    <td>@employee.LastName</td>
                    <td>@employee.PhoneNr</td>
                    <td>@employee.Email</td>
                    <td>@employee.Pesel</td>
                    <td>@employee.Salary</td>
                    <td>@(employee.EmployedTo is null ? null : ((DateTime)employee.EmployedTo).ToShortDateString())</td>
                    <td class="hstack">
                        <a class="nav-link" href="employeeForm/details/@employee.Id">
                            <span class="oi oi-magnifying-glass" aria-hidden="true"></span>
                        </a>
                        <a class="nav-link" href="employeeForm/edit/@employee.Id">
                            <span class="oi oi-pencil" aria-hidden="true"></span>
                        </a>
                        <a class="nav-link" href="" @onclick="@(() => {DeleteEmployee(employee.Id); })">
                            <span class="oi oi-trash" aria-hidden="true"></span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    ICollection<EmployeeViewDto> employees = new List<EmployeeViewDto>();
    private string searchPhrase;

    protected override async Task OnInitializedAsync()
    {
        employees = await _httpClient.GetFromJsonAsync<ICollection<EmployeeViewDto>>($"api/employee?searchPhrase={searchPhrase}");
    }

    protected async void DeleteEmployee(int id)
    {
        await _httpClient.DeleteAsync($"api/employee/{id}");
        NavigationManager.NavigateTo("employeeList");
    }

    protected async void Search()
    {
        await OnInitializedAsync();
        StateHasChanged();
    }
}